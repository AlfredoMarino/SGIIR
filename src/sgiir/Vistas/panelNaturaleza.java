/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgiir.Vistas;

import java.awt.EventQueue;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import javax.swing.JPanel;
import sgiir.Entidades.Institucion;
import sgiir.Entidades.Naturaleza;
import sgiir.Entidades.Seguimiento;
import sgiir.comboBox;
import sgiir.statusBar;

/**
 *
 * @author Alfredo Mariño
 */
public class panelNaturaleza extends JPanel {
    private int tipoNaturaleza, prioridadNaturaleza, codigoInstitucion;
    private Institucion i;
    
    public panelNaturaleza() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
        
        comboInstitucion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SGIIRPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT n FROM Naturaleza n");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        rgrTipo = new javax.swing.ButtonGroup();
        tipoNaturalezaField = new javax.swing.JTextField();
        rgrPrioridad = new javax.swing.ButtonGroup();
        prioridadNaturalezaField = new javax.swing.JTextField();
        queryInstitucion = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT i FROM Institucion i");
        listInstitucion = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryInstitucion.getResultList());
        codigoInstitucionField = new javax.swing.JTextField();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        codigoInstitucionLabel = new javax.swing.JLabel();
        tipoNaturalezaLabel = new javax.swing.JLabel();
        prioridadNaturalezaLabel = new javax.swing.JLabel();
        codigoNaturalezaLabel = new javax.swing.JLabel();
        codigoNaturalezaField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        rdbTipo1 = new javax.swing.JRadioButton();
        rdbTipo2 = new javax.swing.JRadioButton();
        rdbPrioridad1 = new javax.swing.JRadioButton();
        rdbPrioridad2 = new javax.swing.JRadioButton();
        rdbPrioridad3 = new javax.swing.JRadioButton();
        cbxInstitucion = new javax.swing.JComboBox<>();

        FormListener formListener = new FormListener();

        rgrTipo.add(rdbTipo1);
        rgrTipo.add(rdbTipo2);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.tipoNaturaleza}"), tipoNaturalezaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), tipoNaturalezaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        tipoNaturalezaField.addCaretListener(formListener);

        rgrPrioridad.add(rdbPrioridad1);
        rgrPrioridad.add(rdbPrioridad2);
        rgrPrioridad.add(rdbPrioridad3);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.prioridadNaturaleza}"), prioridadNaturalezaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), prioridadNaturalezaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        prioridadNaturalezaField.addCaretListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codigoInstitucion.codigoInstitucion}"), codigoInstitucionField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), codigoInstitucionField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoNaturaleza}"));
        columnBinding.setColumnName("Codigo Naturaleza");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${prioridadNaturaleza == 1 ? 'Baja' : (prioridadNaturaleza == 2 ?  'Media' : 'Alta')}"));
        columnBinding.setColumnName("Prioridad");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoNaturaleza == 0? 'Requerimiento' : 'Incidencia'}"));
        columnBinding.setColumnName("Tipo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codigoInstitucion.nombreInstitucion}"));
        columnBinding.setColumnName("Institución");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addMouseListener(formListener);
        masterScrollPane.setViewportView(masterTable);

        codigoInstitucionLabel.setText("Codigo Institucion:");

        tipoNaturalezaLabel.setText("Tipo Naturaleza:");

        prioridadNaturalezaLabel.setText("Prioridad Naturaleza:");

        codigoNaturalezaLabel.setText("Codigo Naturaleza:");

        codigoNaturalezaField.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codigoNaturaleza}"), codigoNaturalezaField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("");
        bindingGroup.addBinding(binding);

        saveButton.setText("Save");
        saveButton.addActionListener(formListener);

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(formListener);

        newButton.setText("New");
        newButton.addActionListener(formListener);

        deleteButton.setText("Delete");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);

        rdbTipo1.setText("Incidencia");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, codigoNaturalezaField, org.jdesktop.beansbinding.ELProperty.create("${text == ''}"), rdbTipo1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        rdbTipo1.addActionListener(formListener);

        rdbTipo2.setText("Requerimiento");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, codigoNaturalezaField, org.jdesktop.beansbinding.ELProperty.create("${text == ''}"), rdbTipo2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        rdbPrioridad1.setText("Baja");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, codigoNaturalezaField, org.jdesktop.beansbinding.ELProperty.create("${text == ''}"), rdbPrioridad1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        rdbPrioridad1.addActionListener(formListener);

        rdbPrioridad2.setText("Media");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, codigoNaturalezaField, org.jdesktop.beansbinding.ELProperty.create("${text == ''}"), rdbPrioridad2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        rdbPrioridad2.addActionListener(formListener);

        rdbPrioridad3.setText("Alta");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, codigoNaturalezaField, org.jdesktop.beansbinding.ELProperty.create("${text == ''}"), rdbPrioridad3, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        rdbPrioridad3.addActionListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, codigoNaturalezaField, org.jdesktop.beansbinding.ELProperty.create("${text == ''}"), cbxInstitucion, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(newButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(codigoInstitucionLabel)
                                    .addComponent(tipoNaturalezaLabel)
                                    .addComponent(prioridadNaturalezaLabel)
                                    .addComponent(codigoNaturalezaLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rdbTipo1)
                                            .addComponent(rdbPrioridad1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rdbTipo2)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(rdbPrioridad2)
                                                .addGap(49, 49, 49)
                                                .addComponent(rdbPrioridad3))))
                                    .addComponent(cbxInstitucion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(codigoNaturalezaField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 95, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {deleteButton, newButton, refreshButton, saveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoNaturalezaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigoNaturalezaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoInstitucionLabel)
                    .addComponent(cbxInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoNaturalezaLabel)
                    .addComponent(rdbTipo1)
                    .addComponent(rdbTipo2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prioridadNaturalezaLabel)
                    .addComponent(rdbPrioridad1)
                    .addComponent(rdbPrioridad2)
                    .addComponent(rdbPrioridad3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(refreshButton)
                    .addComponent(deleteButton)
                    .addComponent(newButton))
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.MouseListener, javax.swing.event.CaretListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                panelNaturaleza.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                panelNaturaleza.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                panelNaturaleza.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                panelNaturaleza.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == rdbTipo1) {
                panelNaturaleza.this.rdbTipo1ActionPerformed(evt);
            }
            else if (evt.getSource() == rdbPrioridad1) {
                panelNaturaleza.this.rdbPrioridad1ActionPerformed(evt);
            }
            else if (evt.getSource() == rdbPrioridad2) {
                panelNaturaleza.this.rdbPrioridad2ActionPerformed(evt);
            }
            else if (evt.getSource() == rdbPrioridad3) {
                panelNaturaleza.this.rdbPrioridad3ActionPerformed(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == masterTable) {
                panelNaturaleza.this.masterTableMouseReleased(evt);
            }
        }

        public void caretUpdate(javax.swing.event.CaretEvent evt) {
            if (evt.getSource() == tipoNaturalezaField) {
                panelNaturaleza.this.tipoNaturalezaFieldCaretUpdate(evt);
            }
            else if (evt.getSource() == prioridadNaturalezaField) {
                panelNaturaleza.this.prioridadNaturalezaFieldCaretUpdate(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    
    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refresh();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<sgiir.Entidades.Naturaleza> toRemove = new ArrayList<sgiir.Entidades.Naturaleza>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            sgiir.Entidades.Naturaleza n = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(n);
            entityManager.remove(n);
        }
        list.removeAll(toRemove);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        sgiir.Entidades.Naturaleza n = new sgiir.Entidades.Naturaleza();
        entityManager.persist(n);
        list.add(n);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            seteaCampos();
            
            int[] selected = masterTable.getSelectedRows();
            List<Naturaleza> toMerged = new ArrayList<Naturaleza>(selected.length);
            for (int idx = 0; idx < selected.length; idx++) {
                Naturaleza n = list.get(masterTable.convertRowIndexToModel(selected[idx]));
                
                n.setCodigoInstitucion(i);
                n.setTipoNaturaleza(tipoNaturaleza);
                n.setPrioridadNaturaleza(prioridadNaturaleza);
                              
                toMerged.add(n);

                entityManager.merge(n);
            }
            
            
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
            
            statusBar.getInstance().setMsg("Operación exitosa");
            refresh();
        } catch (RollbackException rex) {
            statusBar.getInstance().setMsg("Operación fallida");
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<sgiir.Entidades.Naturaleza> merged = new ArrayList<sgiir.Entidades.Naturaleza>(list.size());
            for (sgiir.Entidades.Naturaleza n : list) {
                merged.add(entityManager.merge(n));
            }
            list.clear();
            list.addAll(merged);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void rdbTipo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbTipo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbTipo1ActionPerformed

    private void tipoNaturalezaFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tipoNaturalezaFieldCaretUpdate
        switch(tipoNaturalezaField.getText()){
            //Requerimiento
            case "0":
                rdbTipo2.setSelected(true);
            break;
            
            //incidencia
            case "1":
                rdbTipo1.setSelected(true);
            break; 
        }
    }//GEN-LAST:event_tipoNaturalezaFieldCaretUpdate

    private void rdbPrioridad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbPrioridad1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbPrioridad1ActionPerformed

    private void rdbPrioridad2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbPrioridad2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbPrioridad2ActionPerformed

    private void rdbPrioridad3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbPrioridad3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbPrioridad3ActionPerformed

    private void prioridadNaturalezaFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_prioridadNaturalezaFieldCaretUpdate
        switch(prioridadNaturalezaField.getText()){
            //baja
            case "1":
                rdbPrioridad1.setSelected(true);
            break;
            
            //Media
            case "2":
                rdbPrioridad2.setSelected(true);
            break; 
            
            //Alta
            case "3":
                rdbPrioridad3.setSelected(true);
            break; 
        }
    }//GEN-LAST:event_prioridadNaturalezaFieldCaretUpdate

    private void masterTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseReleased
        if(masterTable.getSelectedRow() != -1){
            

            if(isNumeric(codigoInstitucionField.getText())){
                for (int index = 0; index < cbxInstitucion.getItemCount(); index++) {
                    if(Integer.valueOf(codigoInstitucionField.getText()) == cbxInstitucion.getItemAt(index).getId()){
                        cbxInstitucion.setSelectedIndex(index);
                        
                    }
                }
            }

        }
    }//GEN-LAST:event_masterTableMouseReleased
    
    private void seteaCampos(){
        
        comboBox itemCombo;
        itemCombo = (comboBox) cbxInstitucion.getSelectedItem();
        codigoInstitucion = itemCombo.getId();
        
        i = (Institucion) entityManager.find(Institucion.class, codigoInstitucion);
              
        if(rdbTipo1.isSelected()){
            tipoNaturaleza = 1; 
        }else{
            tipoNaturaleza = 0; 
        }
        
        if(rdbPrioridad1.isSelected()){
            prioridadNaturaleza = 1; //Baja
        }else{
            if(rdbPrioridad2.isSelected()){
                prioridadNaturaleza = 2; //Media
            }else{
                prioridadNaturaleza = 3; //Alta 
            }
        }
    }
    
    private void comboInstitucion(){
        cbxInstitucion.removeAllItems();
        comboBox ItemCombo = new comboBox(0, "");
        cbxInstitucion.addItem(ItemCombo);   
        
        for(Institucion entidad : listInstitucion){

            cbxInstitucion.addItem(new comboBox(entidad.getCodigoInstitucion(), entidad.getNombreInstitucion()));
            
        }
    }
    
    private void refresh(){
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
    }
    
    private static boolean isNumeric(String cadena){
	try {
            Integer.parseInt(cadena);
            return true;
	} catch (NumberFormatException nfe){
            return false;
	}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<comboBox> cbxInstitucion;
    private javax.swing.JTextField codigoInstitucionField;
    private javax.swing.JLabel codigoInstitucionLabel;
    private javax.swing.JTextField codigoNaturalezaField;
    private javax.swing.JLabel codigoNaturalezaLabel;
    private javax.swing.JButton deleteButton;
    private javax.persistence.EntityManager entityManager;
    private java.util.List<sgiir.Entidades.Naturaleza> list;
    private java.util.List<Institucion> listInstitucion;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField prioridadNaturalezaField;
    private javax.swing.JLabel prioridadNaturalezaLabel;
    private javax.persistence.Query query;
    private javax.persistence.Query queryInstitucion;
    private javax.swing.JRadioButton rdbPrioridad1;
    private javax.swing.JRadioButton rdbPrioridad2;
    private javax.swing.JRadioButton rdbPrioridad3;
    private javax.swing.JRadioButton rdbTipo1;
    private javax.swing.JRadioButton rdbTipo2;
    private javax.swing.JButton refreshButton;
    private javax.swing.ButtonGroup rgrPrioridad;
    private javax.swing.ButtonGroup rgrTipo;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField tipoNaturalezaField;
    private javax.swing.JLabel tipoNaturalezaLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(panelNaturaleza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(panelNaturaleza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(panelNaturaleza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(panelNaturaleza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new panelNaturaleza());
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
    
}
