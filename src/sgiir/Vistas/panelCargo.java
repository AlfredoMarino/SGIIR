/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgiir.Vistas;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import sgiir.manejadorDB;
import static sgiir.manejadorDB.Conexion;
import sgiir.propiedades.propiedades;

/**
 *
 * @author Alfredo Mari√±o
 */
public class panelCargo extends javax.swing.JPanel {
    
    private propiedades msgFile = new propiedades();
    private propiedades qryFile = new propiedades(5);
    private String Query = "";
    private ResultSet rs;
    private int[] indiceInstrumento = new int[50];
    private int i = 0;
    private String[] columnas = {"Codigo", "Nombre", "Apellidos"};
    private DefaultTableModel model = new DefaultTableModel(null, columnas);

  
    public byte TypeUser;
    
    //Manejador de base de datos
    manejadorDB DataBase = manejadorDB.getInstance(); 

    /**
     * Creates new form panelCargo
     */
    public panelCargo() {
        initComponents();
        

        cargaComboInstrumento();
        cargaMasterTable();
        MasterTable.getColumnModel().getColumn(0).setMaxWidth(0);
        MasterTable.getColumnModel().getColumn(0).setMinWidth(0);
        MasterTable.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        MasterTable.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);

    }
    
    private void cargaComboInstrumento(){
       
        cbxInstitucion.removeAllItems();
        
        try {
            rs = DataBase.executeQuery(qryFile.getProperty("qry0002"));
            i = 0;
            while(rs.next()){
                cbxInstitucion.addItem(rs.getString("nombreInstitucion"));
                indiceInstrumento[i] = rs.getInt("codigoInstitucion");
                i++;
            }
        } catch (SQLException ex) {
        Logger.getLogger(panelCargo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        MasterTable = new javax.swing.JTable();
        cbxInstitucion = new javax.swing.JComboBox<>();
        fldDescripcion = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        chbInforme = new javax.swing.JCheckBox();

        MasterTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Title 2", "Title 3"
            }
        ));
        MasterTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MasterTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(MasterTable);

        cbxInstitucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxInstitucionMouseClicked(evt);
            }
        });
        cbxInstitucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxInstitucionActionPerformed(evt);
            }
        });

        fldDescripcion.setText("jTextField1");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");

        jButton3.setText("jButton3");

        jButton4.setText("jButton4");

        chbInforme.setText("jCheckBox1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chbInforme)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fldDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                .addComponent(cbxInstitucion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fldDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbxInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chbInforme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void MasterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MasterTableMouseClicked
        if(evt.getButton()==1){
            int filaSeleccionada = MasterTable.getSelectedRow();
            try{
                //habilitar
                Query = "select * from cargo where codigoCargo = " + MasterTable.getValueAt(filaSeleccionada, 0);
                rs = DataBase.executeQuery(Query);
                rs.next();
                fldDescripcion.setText(rs.getString("descripcionCargo"));
                posicionaInstitucion(rs.getInt("codigoInstitucion"));
                chbInforme.setSelected(rs.getBoolean("informeCargo"));
                
            } catch (SQLException ex) {
                Logger.getLogger(panelCargo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_MasterTableMouseClicked

    private void cbxInstitucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxInstitucionActionPerformed
        
    }//GEN-LAST:event_cbxInstitucionActionPerformed

    private void cbxInstitucionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxInstitucionMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxInstitucionMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Query = "INSERT INTO cargo (CodigoCargo, DescripcionCargo, CodigoInstitucion, InformeCargo) VALUES (NULL, ?, ?, ?)";
            PreparedStatement ps = Conexion.prepareCall(Query);
            ps.setString(1, fldDescripcion.getText());
            ps.setInt(2, indiceInstrumento[cbxInstitucion.getSelectedIndex()]);
            ps.setBoolean(3, chbInforme.isSelected());
            
            int res = ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(panelCargo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void cargaMasterTable(){
        String[] fila = new String[3];
        
        try {
            Query = qryFile.getProperty("qry0003");
            rs = DataBase.executeQuery(Query);
            while(rs.next()){
                fila[0] = rs.getString("codigoInstitucion");
                fila[1] = rs.getString("descripcionCargo");
                fila[2] = rs.getString("informeCargo");
                
                model.addRow(fila);
            }
            MasterTable.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(panelCargo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
    private void posicionaInstitucion(int indice){
       
        cbxInstitucion.getItemAt(buscaData(indiceInstrumento, indice));
        
    }
    
    private int buscaData(int [] arreglo, int dato){
        for (int i = 0 ; i < arreglo.length ; i++) {
            if (arreglo[i] == dato) {
                return i;
            }
        }
        return 0;
    }
      

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MasterTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxInstitucion;
    private javax.swing.JCheckBox chbInforme;
    private javax.swing.JTextField fldDescripcion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
